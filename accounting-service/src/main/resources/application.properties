# Port du serveur AccountingService
server.address=localhost
server.port=8082

# Nom de l'application AccountingService
spring.application.name=accounting-service
server.shutdown=graceful
spring.config.import=optional:configserver:http://localhost:8888
#spring.config.import=configserver:http://localhost:8888/

# Configuration de Eureka Client pour la découverte des services
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.instance.prefer-ip-address=false
eureka.instance.hostname=localhost

######## Actuator Configuration  #########
management.info.git.mode=full
management.endpoints.web.exposure.include=*
management.metrics.tags.application=${spring.application.name}
management.tracing.enabled=false
management.tracing.sampling.probability=1.0

######## Swagger Configuration  #########
swagger.api-gateway-url=http://localhost:8080/api/accounting

# Configuration MongoDB pour la base de donnÃ©es des utilisateurs
spring.data.mongodb.uri=mongodb://localhost:27017/accountingdb
spring.data.mongodb.user=root
spring.data.mongodb.password=root

######## API Gateway Application Configuration  #########
spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.globalcors.cors-configurations["[/**]"].allowed-origins="*"
spring.cloud.gateway.globalcors.cors-configurations["[/**]"].allowed-methods="*"
spring.cloud.gateway.globalcors.cors-configurations["[/**]"].allowed-headers="*"
spring.cloud.gateway.globalcors.cors-configurations["[/**]"].allow-credentials=true

